language: cpp

compiler:  
    - gcc

sudo: required

notifications:
  email:
    recipients:
      - juandausa@gmail.com
      - zebas.graffe@gmail.com
    on_success: change
    on_failure: always
    
before_install:
    - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
    - sudo apt-get update -qq
    - if [ "$CXX" = "clang++" ]; then sudo apt-get install -qq libstdc++-4.9-dev; fi
    - if [ "$CXX" = "g++" ]; then sudo apt-get install -qq g++-4.9; fi
    - if [ "$CXX" = "g++" ]; then export CXX="g++-4.9" CC="gcc-4.9"; fi
    - sudo apt-get install -qq libyajl-dev libxml2-dev libxqilla-dev valgrind lcov build-essential
    - sudo apt-get install zlib1g-dev libbz2-dev libsnappy-dev
    - sudo apt-get install libgtest-dev
    - "cd /usr/src/gtest && sudo cmake . && sudo cmake --build . && sudo mv libg* /usr/local/lib/ ; cd -"
    - wget https://github.com/google/glog/archive/v0.3.4.tar.gz
    - tar xf v0.3.4.tar.gz
    - cd glog-0.3.4
    - ./configure
    - make
    - sudo make install
    - sudo ldconfig -v | grep glog
    - cd ..
    - wget https://github.com/schuhschuh/gflags/archive/v2.1.2.tar.gz
    - tar xf v2.1.2.tar.gz
    - cd gflags-2.1.2/
    - cmake .
    - make
    - sudo make install
    - sudo ldconfig -v
    - cd ..
    - wget https://github.com/facebook/rocksdb/archive/rocksdb-4.3.1.tar.gz
    - tar xf rocksdb-4.3.1.tar.gz
    - cd rocksdb-rocksdb-4.3.1/
    - make static_lib
    - sudo make install
    - sudo ldconfig -v
    - cd ..

before_script:
    - cd AppServer
    - ./cpplint/cpplint.py --extensions=cpp --linelength=140 ./ar/fi/uba/tallerii/src/[^Mongoose.cpp]*
    - ./cpplint/cpplint.py --extensions=cpp --linelength=140  ./ar/fi/uba/tallerii/main/*
    - cmake .
    - make

script: valgrind --leak-check=full --error-exitcode=1 ./ar/fi/uba/tallerii/test/runTests
