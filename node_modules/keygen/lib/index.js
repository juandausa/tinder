
/*
 * keygen
 * https://github.com/devmode/keygen
 *
 * Copyright (c) 2014 DevMode, Inc.
 * Licensed under the MIT license.
 */

(function() {
  var crypto, gen_for;

  crypto = require('crypto');

  gen_for = function(alpha) {
    var it;
    alpha = ((function() {
      var _i, _ref, _results;
      _results = [];
      for (it = _i = 0, _ref = 256 / alpha.length + 1; 0 <= _ref ? _i <= _ref : _i >= _ref; it = 0 <= _ref ? ++_i : --_i) {
        _results.push(alpha);
      }
      return _results;
    })()).join('').split('');
    return function(length) {
      var byte, ex;
      if (length == null) {
        length = 22;
      }
      try {
        return ((function() {
          var _i, _len, _ref, _results;
          _ref = crypto.randomBytes(length);
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            byte = _ref[_i];
            _results.push(alpha[byte]);
          }
          return _results;
        })()).join('');
      } catch (_error) {
        ex = _error;
        return ((function() {
          var _i, _results;
          _results = [];
          for (_i = 1; 1 <= length ? _i <= length : _i >= length; 1 <= length ? _i++ : _i--) {
            _results.push(alpha[Math.floor(Math.random() * alpha.length)]);
          }
          return _results;
        })()).join('');
      }
    };
  };

  module.exports = {
    gen_for: gen_for,
    hex: gen_for('0123456789abcdef'),
    url: gen_for('23456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'),
    small: 11,
    medium: 22,
    large: 44
  };

}).call(this);
